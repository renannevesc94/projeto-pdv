// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

generator dbml {
  provider = "prisma-dbml-generator"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id       String  @id @default(uuid())
  name     String
  email    String  @unique
  password String
  role     Role    @default(OPERADOR)
  Sales    Sales[]

  @@map("users")
}

enum Role {
  OPERADOR
  SUPERVISOR
  ADMINISTRADOR
}

model Products {
  id          String       @id @default(uuid())
  description String
  ean         String       @unique
  category    Categories   @relation(fields: [categoryId], references: [id])
  unit        String
  cost        Float
  price       Float
  stock       Float
  status      Boolean
  tags        String
  min_stock   Float
  supplier    Suppliers    @relation(fields: [supplierId], references: [id])
  updated_at  DateTime     @default(now()) @updatedAt
  created_at  DateTime     @default(now())
  categoryId  Int
  supplierId  Int
  imageUrl    String
  SalesItems  SalesItems[]

  @@map("products")
}

model Categories {
  id          Int        @id @default(autoincrement())
  description String     @unique
  Products    Products[]

  @@map("categories")
}

model Suppliers {
  id          Int        @id @default(autoincrement())
  name        String     @unique
  description String
  Products    Products[]

  @@map("suppliers")
}

model Sales {
  id            Int               @id @default(autoincrement())
  user          Users             @relation(fields: [usersId], references: [id])
  usersId       String
  SalesItems    SalesItems[]
  paymentMethod String?
  discountType  discountTypeEnum?
  discount      Float             @default(0)
  total         Float             @default(0)
  discountValue Float             @default(0)
  status        statusSaleEnum    @default(OPEN)
  created_at    DateTime          @default(now())
  updated_at    DateTime          @default(now()) @updatedAt

  @@map("sales")
}

enum statusSaleEnum {
  OPEN
  CLOSED
  CANCELED
}

enum discountTypeEnum {
  FIXED
  PERCENT
}

model SalesItems {
  id            String            @id @default(uuid())
  sales         Sales             @relation(fields: [salesId], references: [id])
  salesId       Int
  products      Products          @relation(fields: [productsId], references: [id])
  quantity      Float
  unitPrice     Float
  discountType  discountTypeEnum?
  discount      Float             @default(0)
  discountValue Float             @default(0)
  totalPrice    Float
  productsId    String

  @@map("sales_items")
}
